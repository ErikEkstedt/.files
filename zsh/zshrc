# vim: fdm=marker nowrap
# ZSHRC
 
case `uname` in
  Darwin)
    # commands for OS X go here
    export LC_ALL=en_US.UTF-8
    ;;
  Linux)
    # commands for Linux go here
    stty -ixon # C-s, C-q 
    ;;
esac

# Settings {{{
DISABLE_AUTO_TITLE="true" # Uncomment the following line to disable auto-setting terminal title.
setopt RM_STAR_WAIT  # if you do a 'rm *', Zsh will give you a sanity check!
setopt interactivecomments #allows to type Bash style comments in the command line
# zmodload zsh/zprof # see time and processes
# }}}

# Export {{{

# Term
export BROWSER="brave browser"   # google-chrome
export COLORTERM="truecolor"
export DOTFILES="$HOME/.files"
export EDITOR='nvim'
export KEYTIMEOUT=1
export LANG=en_US.UTF-8
export TERM="screen-256color"  # "xterm-256color"
export USE_EDITOR=$EDITOR
export VISUAL=$EDITOR
export KAGGLE_USERNAME=erikislearning
# export KAGGLE_KEY=xxxxxxxxxxxxxx
export PATH=$HOME/.node_modules_global/bin:${PATH}
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export GEM_HOME="$HOME/gems"  # Ruby (for jekyll)
export PATH="/usr/local/opt/ruby/bin:$PATH"
export PATH="$HOME/gems/bin:$PATH"  # Install Ruby Gems to ~/gems

## CUDA
if [[ $(hostname) == 'erik-Desktop' ]]; then
	export PATH=/usr/local/cuda-9.0/bin:${PATH}
	export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda-9.0/lib64
fi

# export PATH=$HOME/.local/bin:${PATH}
# export PATH=$HOME/.files/bin:${PATH}  # For my custom scripts
# Geckodriver (selenium, webdriver for firefox)
# export PATH=$HOME/geckodriver:${PATH}  # Download tar file and extract here 
# }}}

# Tmux {{{
if [ "$TMUX" = "" ]; then 
	tmux new
fi
source ~/.files/tmux/tmux_functions.zsh  # For my custom scripts
# }}}

## ZSH Theme {{{
export ZSH=$HOME/.oh-my-zsh
ZSH_THEME="spaceship"
plugins=(vi-mode  zsh-syntax-highlighting) # zsh-autosuggestions

# zsh-syntax-highlighting
# git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)

# Declare the variable
typeset -A ZSH_HIGHLIGHT_STYLES
ZSH_HIGHLIGHT_STYLES[alias]='fg=magenta,bold' # To differentiate aliases from other command types
ZSH_HIGHLIGHT_STYLES[path]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[commands]='fg=cyan,bold' # To have paths colored instead of underlined
ZSH_HIGHLIGHT_STYLES[globbing]='none'         # To disable highlighting of globbing expressions


source $ZSH/oh-my-zsh.sh
source $HOME/.files/zsh/space_ship_ohmyzsh.zsh

# Work or not?
source ~/.files/zsh/less_colors.zsh
source ~/.files/zsh/aliases.zsh
#}}}

## FZF {{{
if [[ -f ~/.fzf.zsh  ]]; then
  source ~/.fzf.zsh
  source ~/.files/fzf/fzf_zsh_settings.zsh
  source ~/.files/zsh/zsh-functions.zsh
fi

if type "tmuxinator" > /dev/null; then
  source ~/.files/tmuxinator/tmuxinator.zsh
fi


case Linux in
  Darwin)
    # commands for OS X go here
    if [ -f ~/.files/zsh/zsh-functions-mac.zsh ]; then
      source ~/.files/zsh/zsh-functions-mac.zsh
    else
      echo "404: ~/.files/zsh/zsh-functions-mac.zsh not found."
    fi
    ;;
  Linux)
    # commands for Linux go here
    source ~/.files/zsh/zsh-functions-kde.zsh
    ;;
esac
# }}}

# Conda addition {{{
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
# }}}

# ==== ZSHRC ====
# (K)Ubuntu 16.04, 17.10, 18.04

case `uname` in
  Darwin)
    # commands for OS X go here
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8
    ;;
  Linux)
    # commands for Linux go here
    stty -ixon # C-s, C-q 
    ;;
  FreeBSD)
    # commands for FreeBSD go here
    ;;
esac

# Settings {{{
# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"
# if you do a 'rm *', Zsh will give you a sanity check!
setopt RM_STAR_WAIT

#allows to type Bash style comments in the command line
setopt interactivecomments 

# zmodload zsh/zprof # see time and processes
# }}}

#==== Export {{{

export KEYTIMEOUT=1
export TERM="screen-256color"  # "xterm-256color"
export COLORTERM="truecolor"

export EDITOR='nvim'
export USE_EDITOR=$EDITOR
export VISUAL=$EDITOR
export BROWSER="firefox"   # google-chrome
export LANG=en_US.UTF-8
export DOTFILES="$HOME/.files"

## Conda / Python / Node Envs
export PATH=$HOME/miniconda3/bin:${PATH}
export PATH=$HOME/.node_modules_global/bin:${PATH}
export PATH=$HOME/.local/bin:${PATH}
export PATH=$HOME/.files/bin:${PATH}  # For my custom scripts

# export PYTHONPATH=$HOME/.files/pythonpath

# Geckodriver (selenium, webdriver for firefox)
export PATH=$HOME/geckodriver:${PATH}  # Download tar file and extract here 
# Kaggle
export KAGGLE_USERNAME=erikislearning
# export KAGGLE_KEY=xxxxxxxxxxxxxx
## CUDA
if [[ $(hostname) == 'erik-Desktop' ]]; then
	export PATH=/usr/local/cuda-9.0/bin:${PATH}
	export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda-9.0/lib64
fi

###==== TMUX {{{
if [ "$TMUX" = "" ]; then 
	tmux new
fi

#function start_tmux() {
#    if type tmux &> /dev/null; then
#        #if not inside a tmux session, and if no session is started, start a new session
#        if [[ -z "$TMUX" && -z $TERMINAL_CONTEXT ]]; then
#            (tmux -2 attach || tmux -2 new-session)
#        fi
#    fi
#}
#start_tmux
###}}}

##==== ZSH Theme {{{
#
export ZSH=$HOME/.oh-my-zsh
ZSH_THEME="spaceship"
plugins=(vi-mode zsh-autosuggestions)
source $ZSH/oh-my-zsh.sh

source $HOME/.files/zsh/space_ship_ohmyzsh.zsh

## I believe npm install of spaceship makes the line below obsolete..
#bindkey '^ ' autosuggest-accept

#}}}

# Color in Less Pager {{{
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin bold
export LESS_TERMCAP_md=$'\E[1;36m'     # begin blink
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline
export GROFF_NO_SGR=1                  # for konsole and gnome-terminal
#}}}

##==== Base16 {{{
#BASE16_SHELL=$HOME/.config/base16-shell/
#[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"
##}}}

##==== FZF {{{
if [[ -f ~/.fzf.zsh  ]]; then
	source ~/.fzf.zsh
fi

if [ -f ~/.files/fzf/fzf_zsh_settings.zsh ]; then
	source ~/.files/fzf/fzf_zsh_settings.zsh
else
    echo "404: ~/.files/fzf/fzf_zsh_settings.zsh"
fi
#}}}

if [ -f ~/.files/zsh/zsh-functions.zsh ]; then
    source ~/.files/zsh/zsh-functions.zsh
else
    echo "404: ~/.files/zsh/zsh-functions.zsh not found."
fi

if [ -f ~/.files/zsh/zsh-functions-mac.zsh ]; then
  source ~/.files/zsh/zsh-functions-mac.zsh
else
  echo "404: ~/.files/zsh/zsh-functions-mac.zsh not found."
fi

if [ -f ~/.files/zsh/aliases.zsh ]; then
    source ~/.files/zsh/aliases.zsh
else
    print "404: ~/.files/zsh/aliases.zsh not found."
fi

if [ -f .oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
	source .oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

if [ -f $HOME/.oh-my-zsh/custom/themes/spaceship.zsh-theme ]; then
	source "$HOME/.oh-my-zsh/custom/themes/spaceship.zsh-theme"
fi

source ~/.files/tmuxinator/tmuxinator.zsh
source ~/.files/tmux/tmux_functions.zsh  # For my custom scripts

# }}}


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Yarn

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Ruby (for jekyll)
# Install Ruby Gems to ~/gems
export GEM_HOME="$HOME/gems"
export PATH="$HOME/gems/bin:$PATH"

# ============================================== #
# =================  ZSHRC  ==================== #
# ============================================== #
# vim: fdm=marker
# DISABLE_AUTO_TITLE="true" # Uncomment the following line to disable auto-setting terminal title.
setopt RM_STAR_WAIT  # if you do a 'rm *', Zsh will give you a sanity check!
setopt interactivecomments # allows to type Bash style comments in the command line
# zmodload zsh/zprof # see time and processes

# Export  {{{
export LC_ALL=en_US.UTF-8
export KEYTIMEOUT=1
export LANG=en_US.UTF-8
export TERM="screen-256color"                                      # "xterm-256color"
export USE_EDITOR=$EDITOR
export VISUAL=$EDITOR
export EDITOR='nvim'
export COLORTERM="truecolor"
export BROWSER="brave-browser"                                     # google-chrome/firefox
export FILEMANAGER="lf"
export DOTFILES="$HOME/.files"
export BAT_THEME='OneHalfDark'
export KAGGLE_USERNAME=erikislearning
export PATH="$HOME/Applications:$PATH"
export PATH="/usr/local/opt/ruby/bin:$PATH"                        # Ruby
export GEM_HOME="$HOME/gems"                                       # Ruby (for jekyll)
export PATH="$HOME/gems/bin:$PATH"                                 # Install Ruby Gems to ~/gems
export PATH="$HOME/go/bin:$PATH"                                   # Install Ruby Gems to ~/gems
export PATH="$HOME/.dotnet:$PATH"                                  # microsoft dotnet for pyls_ms nvim-lsp
export NVM_DIR="$HOME/.nvm"                                        # NVM
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
# source $HOME/.dotnet
# export PATH=$HOME/.local/bin:${PATH}
# export KAGGLE_KEY=xxxxxxxxxxxxxx
# export PATH=$HOME/.files/bin:${PATH}  # For my custom scripts
# Geckodriver (selenium, webdriver for firefox)
# export PATH=$HOME/geckodriver:${PATH}  # Download tar file and extract here
# }}}


# Oh-my-zsh {{{
plugins=(vi-mode  zsh-syntax-highlighting) # zsh-autosuggestions
ZSH_THEME="spaceship"
# ZSH_THEME="robbyrussell"

export ZSH=$HOME/.oh-my-zsh
source $ZSH/oh-my-zsh.sh
source $HOME/.files/zsh/space_ship_ohmyzsh.zsh

# zsh-syntax-highlighting
# git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
typeset -A ZSH_HIGHLIGHT_STYLES               # Declare the variable
ZSH_HIGHLIGHT_STYLES[alias]='fg=magenta,bold' # To differentiate aliases from other command types
ZSH_HIGHLIGHT_STYLES[path]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[commands]='fg=cyan,bold' # To have paths colored instead of underlined
ZSH_HIGHLIGHT_STYLES[globbing]='none'         # To disable highlighting of globbing expressions
# }}}

# Kitty {{{
if [ -x "$(command -v kitty)" ]; then
  autoload -Uz compinit
  compinit
  # Completion for kitty
  kitty + complete setup zsh | source /dev/stdin
fi
# }}}

# Source {{{
if [[ -f ~/.fzf.zsh  ]]; then
    source ~/.fzf.zsh
    source ~/.files/fzf/fzf_zsh_settings.zsh
fi

if type "tmuxinator" > /dev/null; then
    source ~/.files/tmuxinator/tmuxinator.zsh
fi

case `uname` in
  Darwin)
    # commands for OS X go here
    if [ -f ~/.files/zsh/zsh-functions-mac.zsh ]; then
      source ~/.files/zsh/zsh-functions-mac.zsh
    else
      echo "404: ~/.files/zsh/zsh-functions-mac.zsh not found."
    fi
    ;;
  Linux)
    # commands for Linux go here
    source ~/.files/zsh/zsh-functions-kde.zsh
    ;;
esac

case `hostname` in
  erik-desktop)
    # CUDA install...
    #  -   PATH includes /usr/local/cuda-10.2/bin
    #  -   LD_LIBRARY_PATH includes /usr/local/cuda-10.2/lib64, or, add /usr/local/cuda-10.2/lib64 to /etc/ld.so.conf and run ldconfig as root
    export PATH="/usr/local/cuda/bin:$PATH"
    export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
    ;;
esac
source ~/.files/zsh/zsh-functions.zsh  # comes before alias
source ~/.files/zsh/aliases.zsh
source ~/.files/zsh/less_colors.zsh
source ~/.files/tmux/tmux_functions.zsh  # For my custom scripts }}}

# # TMUX  {{{
if [ "$TMUX" = "" ]; then
  if tmux has-session -t=Terminal 2> /dev/null; then
    tmux attach -t Terminal
  else
    tmux new-session -s Terminal
  fi
fi # }}}

# >>> conda initialize >>> {{{
# Conda produces its own prompt prefix to show the current active environment
# remove by running:
# conda config --set changeps1 False
__conda_setup="$('/home/erik/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/erik/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/erik/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/erik/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<< }}}

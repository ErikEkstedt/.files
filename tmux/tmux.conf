# vim:fdm=marker
# ========== Settings {{{

# Checkout gotBletu:
#		https://github.com/gotbletu/dotfiles/blob/master/tmux/.tmux.conf
#

unbind-key C-a  
set-option -g prefix C-a  # Prefix Ctrl-a
bind-key C-a send-prefix

# set -g default-terminal "st-256color"
set-option -ga terminal-overrides ",screen-256color:Tc"

# set -g xterm-keys on
set -g history-limit 262144  # Scroll History

# tmux-resurrect
# for neovim
set -g @resurrect-strategy-nvim 'session'

# copy-mode-vi {{{
# TODO
# Copy does not work on MacLinux ??
set -g set-clipboard on
set -g status-keys vi
set -s escape-time 0 # Make escape press (in vim) be fakked by tmux
set-window-option -g mode-keys vi

bind-key p paste-buffer  # paste; (default hotkey: ] )
bind-key P choose-buffer  # tmux clipboard history

bind-key v copy-mode

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'S-v' send -X select-line
bind-key -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key p paste-buffer

# bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# bind-key p paste-buffer
# }}}

# Mouse {{{
set -g mouse on
bind -T copy-mode-vi WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi WheelDownPane send-keys -X halfpage-down
# bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# }}}

#}}}
# ========== Bindings {{{
bind k swap-pane -U
bind j swap-pane -D

bind ^l split-window -h -c '#{pane_current_path}'
bind ^j split-window -v -c '#{pane_current_path}'

bind ^C new-window -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

bind ^n next-window
bind ^p previous-window
bind p previous-window
bind ^b previous-window
bind b previous-window

bind ^D detach
bind ^k send-keys 'C-l'
bind ^u command-prompt "split-tab 'exec man %%'"

bind C-space next-layout
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."
bind-key C-q kill-pane
bind-key C-a last-window
bind-key T break-pane  
# }}}

# VIM-TMUX Split movement{{{
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# Move between vim-windows/tmux-panes
bind-key -n M-h if-shell "$is_vim"  "send-keys Left "  "select-pane -L"
bind-key -n M-j if-shell "$is_vim"  "send-keys Down "  "select-pane -D"
bind-key -n M-k if-shell "$is_vim"  "send-keys Up   "  "select-pane -U"
bind-key -n M-l if-shell "$is_vim"  "send-keys Right"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim"  "send-keys C-\\ "  "select-pane -l"

bind-key -T copy-mif-shellode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-\ select-pane -l

# Resize vim-windows/tmux-panes
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "resize-pane -L 5"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "resize-pane -R 5"
# I like to use C-j/k with fzf for choosing
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "resize-pane -U 5"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "resize-pane -D 5"

bind h if-shell "$is_vim" "send-keys C-h"  "resize-pane -L 5"
bind l if-shell "$is_vim" "send-keys C-l"  "resize-pane -R 5"
bind k if-shell "$is_vim" "send-keys C-k"  "resize-pane -U 5"
bind j if-shell "$is_vim" "send-keys C-j"  "resize-pane -D 5"

# bind-key -n C-n previous-window
# bind-key -n C-p next-window
#}}}


# ========== Appearance {{{ 
# toggle statusbar
bind-key -n C-F3 set-option -g status 

# don't rename windows automatically
set -g allow-rename off
setw -g automatic-rename off

# ===== Colors {{{ 
color_trans='#000000'
color_modest_cyan='#79CEC6'
color_modest_cyan1='#349C9C'
color_nonactive='#004d4d'
color_active='#86CDBF'
color_pink='#ff00F5'
#}}}

# Bell and miscs. loud or quiet? (spoiler: everything off) {{{
set -g bell-action none
set -g visual-bell off
set -g visual-activity off
set -g visual-silence off
set-window-option -g monitor-activity off
# }}}

# The modes {{{
# copy mode / clock mode
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour81
setw -g mode-bg colour238
# }}}
# The statusbar {{{

# Color
# messaging
set -g message-attr bold
set -g message-fg colour81 #cyan
set -g message-bg $color_trans
set -g message-command-fg '#004d4d'
set -g message-command-bg $color_trans

set -g status-fg '#FFFFFF'
set -g status-bg $color_trans

# Pane borders
set -g pane-border-fg $color_nonactive
set -g pane-active-border-fg $color_active 

set -g pane-active-border-bg $color_trans
set -g pane-border-bg $color_trans

# Window tabs
setw -g window-status-bg $color_trans 
setw -g window-status-fg '#000000'
set -g status-left "#[fg=$color_pink]#[bg=$color_trans]  #S  "
set -g status-right "#[fg=$color_modest_cyan]#[bg=#000000,bold] %d/%m -#[fg=$color_modest_cyan,bg=#000000,bold] H:%M:%S "

setw -g window-status-format " #[bg=$color_nonactive] #[fg=$color_active] #I:#W#[fg=#000000] #F "
setw -g window-status-current-format " #[bg=$color_active] #I:#[fg=#000000] #W#[fg=#000000] #F "
setw -g window-status-attr none
setw -g window-status-current-attr bold

set -g status-left-length 40
set -g status-right-length 50

# Bells
# Dont use bell, have not seen effect of these
# settings but keeping here to not forget..
# setw -g window-status-bell-attr bold
# setw -g window-status-bell-fg colour255
# setw -g window-status-bell-bg colour1

# Settings
set -g status on
set -g set-titles off # I don't know the effect of this
set -g status-position bottom  # top
set -g status-justify centre # left, right, centre
set -g status-interval 2
set -g status-attr bold

# Panes 
set -g base-index 0
setw -g pane-base-index 0


#}}}

## List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Other examples:

# https://github.com/tmux-plugins/vim-tmux-focus-events
# set -g focus-events on

# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

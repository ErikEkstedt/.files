# vim:fdm=marker ft=tmux
# MAC TMUX
# MAC TMUX
# MAC TMUX
# MAC TMUX
# MAC TMUX
# MAC TMUX

# Settings {{{
# Change prefix
unbind-key C-a
set-option -g prefix C-a  # Prefix Ctrl-a
bind-key C-b send-prefix

# Terminal infor
set -g default-terminal "truecolor"
set-option -ga terminal-overrides ",screen-256color:Tc"
# set-option -ga terminal-overrides "screen-56color:Tc"  # seems right colors with zsh: screen-256color
# set-option -ga terminal-overrides ",xterm-256color:Tc"  # truecolor but bad colors with zsh: screen-256color
set -g history-limit 262144  # Scroll History

# tmux-resurrect for neovim
set -g @resurrect-strategy-nvim 'session'
# }}}

# Mouse {{{
set -g mouse on
bind -T copy-mode-vi WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi WheelDownPane send-keys -X halfpage-down
# bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# }}}

# copy-mode-vi {{{

set -g set-clipboard on
set -g status-keys vi
set -s escape-time 0 # Make escape press (in vim) be fakked by tmux
set-window-option -g mode-keys vi

bind-key p paste-buffer  # paste; (default hotkey: ] )
bind-key P choose-buffer  # tmux clipboard history
bind-key v copy-mode

# Os-specific
bind-key -T copy-mode-vi v                 send      -X begin-selection
bind-key -T copy-mode-vi 'S-v'             send      -X select-line
bind-key -T copy-mode-vi 'C-v'             send      -X begin-selection      \; send -X rectangle-toggle
bind-key -T copy-mode-vi y                 send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter             send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi ]                 send-keys -X copy-selection

# }}}

# Bindings {{{

# Tmuxinator {{{
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Move between vim-windows/tmux-panes
bind-key -n M-h if-shell "$is_vim"  "send-keys Left "  "select-pane -L"
bind-key -n M-j if-shell "$is_vim"  "send-keys Down "  "select-pane -D"
bind-key -n M-k if-shell "$is_vim"  "send-keys Up   "  "select-pane -U"
bind-key -n M-l if-shell "$is_vim"  "send-keys Right"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim"  "send-keys C-\\ "  "select-pane -l"

# Iterm compatablity
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
# Move between vim-windows/tmux-panes
bind-key -n Left if-shell "$is_vim"  "send-keys Left "  "select-pane -L"
bind-key -n Down if-shell "$is_vim"  "send-keys Down "  "select-pane -D"
bind-key -n Up if-shell "$is_vim"  "send-keys Up   "  "select-pane -U"
bind-key -n Right if-shell "$is_vim"  "send-keys Right"  "select-pane -R"
# Important to also set new hex - key - sequences in iterm
# iterm -> preferences -> key
# Add new hex key codes:
# 0x1B 0x5B 0x41 = Up    | map to option-k
# 0x1B 0x5B 0x42 = Down  | map to option-j
# 0x1B 0x5B 0x43 = Right | map to option-l
# 0x1B 0x5B 0x44 = Left  | map to option-h

# Resize vim-windows/tmux-panes
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "resize-pane -L 5"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "resize-pane -R 5"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "resize-pane -U 5"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "resize-pane -D 5"

# }}}

# Move panes with prefix-hjkl
unbind H
unbind J
unbind K
unbind L
bind K swap-pane -U
bind L swap-pane -U
bind J swap-pane -D
bind H swap-pane -D

# Movement in iterm is not good yet
unbind h
unbind j
unbind k
unbind l
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind = select-layout even-horizontal
bind C-space next-layout

# New Panes
bind C-l split-window -h -c '#{pane_current_path}'
bind C-j split-window -v -c '#{pane_current_path}'

bind c new-window -c '#{pane_current_path}'
bind-key -n C-Space new-window -c '#{pane_current_path}' \; send-keys "tmux rename-window $(basename $(pwd))" Enter\; send-keys clear Enter

# Next window
bind C-n next-window
# Previous window
bind p previous-window
bind b previous-window
bind C-p previous-window
bind C-b previous-window

bind C-D detach
bind C-k send-keys 'C-l'

bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."
bind-key C-q kill-pane
bind-key C-a last-window
bind-key T break-pane

# toggle statusbar
bind-key ยง set-option -g status

# Toggle theme
unbind t
unbind T
bind t source-file ~/.files/tmux/themes/transparency.tmuxtheme\; display-message "Transparent Theme Loaded"
bind T source-file ~/.files/tmux/themes/onedark.tmuxtheme \; display-message "OneDark Theme Loaded"

#}}}

# Appearance Settings {{{

# don't rename windows automatically
set -g allow-rename off
setw -g automatic-rename off

# Settings
set -g status on
set -g set-titles off # I don't know the effect of this
set -g status-position top  # top, bottom
set -g status-justify centre # left, right, centre
set -g status-interval 2
set -g status-attr bold

# Panes
set -g base-index 0
setw -g pane-base-index 0

# Bell and miscs. loud or quiet? (spoiler: everything off) {{{
set -g bell-action none
set -g visual-bell off
set -g visual-activity off
set -g visual-silence off
set-window-option -g monitor-activity off
# }}}

# The modes {{{
# copy mode / clock mode
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour81
setw -g mode-bg colour238
# }}}

#}}}

# Theme {{{
# source-file ~/.files/tmux/themes/transparency.tmuxtheme
source-file ~/.files/tmux/themes/onedark.tmuxtheme

#}}}

## Plugins {{{

## List of plugins
set -g focus-events on
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# https://github.com/tmux-plugins/vim-tmux-focus-events
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
#}}}

# term
set -g default-terminal "screen-256color"
#set -g default-terminal "rxvt-256color"
# set -g default-terminal "tmux-256color"
# set -ga terminal-overrides ',xterm-256color:Tc'

set -s escape-time 0 # Make escape press (in vim) be fakked by tmux
setw -g mode-keys vi # Vi - mode

# New key
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

# screen ^C c
unbind ^C
bind ^C new-window
bind c new-window

#detach ^D d
unbind ^D
bind ^D detach

unbind p
bind p previous-window

# Reload
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

############ Movement ################
# Switch panes using ALT-hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# clear screen now needs prefix then ctrl-l
bind C-l send-keys 'C-l'

# Resizing (mouse also works).
unbind Left
bind -n C-Left resize-pane -L 5
unbind Right
bind -n C-Right resize-pane -R 5
unbind Down
bind -n C-Down resize-pane -D 5
unbind Up
bind -n C-Up resize-pane -U 5

#Redisplay Ctr-r
unbind r
bind r refresh-client # C-l

# Activate mouse
set-option -g -q mouse on
set -g mouse on

# Scroll History
set -g history-limit 262144

# copy-mode vim style
unbind ]
unbind p
bind v copy-mode
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# Dynamically update iTerm tab and window titles.
set -g set-titles on

# pane
set -g base-index 1
setw -g pane-base-index 1

# Show bells in window titles.
set -g window-status-bell-style fg=yellow,bold,underscore

# Show Status Bar toggle
#### DESIGN CHANGES ##########################################
setw -g automatic-rename on

# Status bar.
bind-key -n C-F3 set-option -g status #Ctrl+F3 Combo

# set -g status-interval 60 # Default is 15.
# set -g status-position bottom
# set -g status-bg colour234
# set -g status-fg colour137
# set -g status-attr dim
# set -g status-left ''

set -g status-right "#[fg=colour233,bg=colour241,bold] $USER@#h #[fg=colour233,bg=colour245,bold] %H:%M "
set -g status-left '#[fg=colour235,bg=colour252,bold] ‚ùê #S #[fg=colour238,bg=colour234,nobold]'

# set -g status-right-length 50
# set -g status-left-length 20
#
#------------------
set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

// Place your key bindings in this file to overwrite the defaults

[
	// UnBind
	{ "key": "ctrl+j", "command": "-workbench.action.togglePanel" },

	// Navigate workbench and movements
	{ "key": "alt+l", "command": "workbench.action.navigateRight", },
	{ "key": "alt+h", "command": "workbench.action.navigateLeft" },
	{ "key": "alt+j", "command": "workbench.action.navigateDown", },
	{ "key": "alt+k", "command": "workbench.action.navigateUp" },

	{ "key": "alt+l", "command": "workbench.action.terminal.focusNextPane", "when": "terminalFocus"},
	{ "key": "alt+h", "command": "workbench.action.terminal.focusPreviousPane", "when": "terminalFocus"},

	// ctrl+j / ctrl+k as downArrow / upArrow
	{ "key": "ctrl+j", "command": "workbench.action.quickOpenNavigateNext", "when": "inQuickOpen" },
	{ "key": "ctrl+k", "command": "workbench.action.quickOpenNavigatePrevious", "when": "inQuickOpen" },

	// All upArrow mappings
	// trying to solve menu when changing a setting in settings 
	// { "key": "ctrl+k", "command": "repl.action.historyPrevious", "when": "inDebugRepl && onFirstDebugReplLine" },
	// { "key": "ctrl+k", "command": "workbench.action.interactivePlayground.arrowUp", "when": "interactivePlaygroundFocus && !editorTextFocus" },
	// { "key": "ctrl+k", "command": "cursorUp", "when": "textInputFocus" } ,
	// { "key": "ctrl+k", "command": "list.focusUp", "when": "listFocus && !inputFocus" } ,
	// { "key": "ctrl+k", "command": "notifications.focusPreviousToast", "when": "notificationFocus && notificationToastsVisible" },
	// { "key": "ctrl+k", "command": "search.action.focusSearchFromResults", "when": "firstMatchFocus && searchViewletVisible" },
	// { "key": "ctrl+k", "command": "search.focus.previousInputBox", "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus" },
	// { "key": "ctrl+k", "command": "selectPrevSuggestion", "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
	// { "key": "ctrl+k", "command": "showPrevParameterHint", "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },


	{ "key": "ctrl+w shift+L", "command": "workbench.action.moveEditorToNextGroup" },
	{ "key": "ctrl+w shift+H", "command": "workbench.action.moveEditorToPreviousGroup" },
	{ "key": "g t", "command": "workbench.action.nextEditor", "when": "!inputFocus"},
	{ "key": "g shift+t", "command": "workbench.action.previousEditor", "when": "!inputFocus"},
	{ "key": "ctrl+l", "command": "workbench.action.increaseViewSize"}, 
	{ "key": "ctrl+h", "command": "workbench.action.decreaseViewSize"}, 

	{ "key": "ctrl+n", "command": "workbench.action.toggleSidebarVisibility" }, // sidebar / explorer
	{ "key": "ctrl+t", "command": "workbench.action.togglePanel"}, // Terminal and debug panel

	// Settings, Keybindings windows
	{ "key": "escape", "command": "keybindings.editor.focusKeybindings", "when": "inKeybindingsSearch && inKeybindingsSearch"},
	{ "key": "escape", "command": "keybindings.editor.searchKeybindings", "when": "inKeybindings && keybindingFocus" },
	{ "key": "ctrl+j", "command": "keybindings.editor.focusKeybindings", "when": "inKeybindingsSearch && inKeybindingsSearch"},
	{ "key": "ctrl+k", "command": "keybindings.editor.searchKeybindings", "when": "inKeybindings && keybindingFocus" },

	{ "key": "escape", "command": "settings.action.focusSettingsEditor", "when": "inSettingsSearch" },
	{ "key": "ctrl+k", "command": "settings.action.search", "when": "inSettingsEditor" },
	{ "key": "ctrl+k", "command": "settings.action.focusPreviousSetting", "when": "inSettingsSearch" },
	{ "key": "ctrl+j", "command": "settings.action.focusNextSetting", "when": "inSettingsSearch" },
	{ "key": "enter", "command": "settings.action.editFocusedSetting", "when": "inSettingsSearch" },

	{ "key": "ctrl+f", "command": "workbench.action.quickOpen" },
	{ "key": "ctrl+p", "command": "editor.action.clipboardPasteAction", "when": "textInputFocus && !editorReadonly"},

	// Autocomplete
	{ "key": "ctrl+j", "command": "selectNextSuggestion", "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
	{ "key": "ctrl+k", "command": "selectPrevSuggestion", "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },

	{ "key": "ctrl+q", "command": "workbench.action.closeActiveEditor" },




]

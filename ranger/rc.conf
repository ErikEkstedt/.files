# :vim ft=conf

# Config for Ranger 
# These settings are added on top of the basic config file
# Thus keeping it light
#
# local:
# /usr/lib/python2.7/dist-packages/ranger/config/rc.conf
#
# Git:
# https://github.com/ranger/ranger/blob/master/ranger/config/rc.conf

# == SETTINGS =={{{
set column_ratios 2,3,4
set preview_images true
set preview_images_method w3m

# Open all images in this directory when running certain image viewers
# like feh or sxiv?  You can still open selected files by marking them.
set open_all_images true

# Be aware of version control systems and display information.
set vcs_aware true
set vcs_backend_git enabled


# Use a unicode "..." character to mark cut-off filenames?
set unicode_ellipsis true
set draw_borders true
set shorten_title 10
set tilde_in_titlebar True

# Flush the input after each key hit?  (Noticable when ranger lags)
set flushinput false

# Padding on the right when there's no preview?
# This allows you to click into the space to run the file.
set padding_right true

# Turning this on makes sense for screen readers:
set show_cursor true

# The delay that ranger idly waits for user input, in milliseconds, with a
# resolution of 100ms.  Lower delay reduces lag between directory updates but
# increases CPU load.
set idle_delay 200

set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp|bbl|bcf|blg|run.xml|aux|log|synctex\.gz|fls|fdb_latexmk)$|^lost\+found$|^__(py)?cache__$


#== Own/Custom Script/Commands =={{{


# open file(vim) in new tmux pane
map ef eval if 'TMUX' in os.environ.keys(): fm.execute_console("shell tmux splitw -h 'vim " + fm.thisfile.basename + "'")

# FZF
# map <C-f> fzf_select
map <C-f> fzf_cd_or_vim
map <C-b> fzf_cd
map <C-n> fzf_cd_from_here
map <C-d> fzf_locate

map mkdir console shell mkdir%space
map to console shell touch%space
map v console shell vim 

# CONFIG FILES EDIT
map ev shell vim ~/.files/nvim/init.vim
map ez shell vim ~/.zshrc
map er shell vim ~/.config/ranger/rc.conf
map etu shell vim ~/.tmux.conf
map gcl console shell git clone%space

# Background
# KDE
map bgf shell qdbus org.kde.plasmashell /PlasmaShell org.kde.PlasmaShell.evaluateScript 'var allDesktops = desktops();print (allDesktops);for (i=0;i<allDesktops.length;i++) {d = allDesktops[i];d.wallpaperPlugin = "org.kde.image";d.currentConfigGroup = Array("Wallpaper", "org.kde.image", "General");d.writeConfig("Image", "%p")}'
map bgl shell echo %p 
map ,n shell dolphin %d &

# Shell
map TT shell -f $TERMINAL -e tmux
#map tt shell $SHELL
map tt shell tmux splitw -h -p 50

################################
#DOCUMENT MOVEMENT#


map grt cd /
map gR eval fm.cd(ranger.RANGERDIR)
map g/ cd /
map g? cd /usr/share/doc/ranger
map gtmp cd /tmp

#usb
map gusb cd /media/erik

# Documents/Downloads/Pictures
map gho cd ~
map gcf cd ~/.config

map gfi cd ~/.files
map gpe cd ~/.personal
map gph cd ~/phd
map gbl cd ~/blog

map gco cd ~/com_sci
map gdo cd ~/Documents
map gdw cd ~/Downloads
map gpi cd ~/Pictures
map gwa cd ~/Pictures/wallpaper


# DEVICONS
# a plugin that adds file glyphs / icon support to Ranger:
# https://github.com/alexanderjeurissen/ranger_devicons
default_linemode devicons

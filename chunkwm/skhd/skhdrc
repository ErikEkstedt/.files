#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <mode> '<' <action> | <action>
#
#                       mode     = 'name of mode' | <mode> ',' <mode>
#
#                       action   = <keysym> ':' <command> | <keysym> '->' ':' <command>
#                                  <keysym> ';' <mode>    | <keysym> '->' ';' <mode>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.
#
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : chunkc border::color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : chunkc border::color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app


# open qutebrowser
# cmd + shift - return : ~/Scripts/qtb.sh
# open mpv
# cmd - m : open -na /Applications/mpv.app $(pbpaste)

# ------------------------------------------#
#         APPLICATION SETTINGS              #
# ------------------------------------------#
alt - return : osascript /Users/erik/.files/chunkwm/skhd/scripts/new-iterm-window.scpt
alt - g : osascript /Users/erik/.files/chunkwm/skhd/scripts/firefox-window.scpt

# WINDOW SETTINGS
# close focused window
alt - w : chunkc tiling::window --close
shift + alt - q : chunkc tiling::window --close
cmd + alt - w : chunkc tiling::desktop --annihilate

# Floating
# float / unfloat window and center on screen
alt - t : chunkc tiling::window --toggle float;\
          chunkc tiling::window --grid-layout 4:4:1:1:2:2

# make floating window fill screen
shift + alt - up : chunkc tiling::window --grid-layout 1:1:0:0:1:1

# make floating window fill left-half of screen
# make floating window fill right-half of screen
# shift + alt - y : chunkc tiling::window --grid-layout 1:2:0:0:1:1
# shift + alt - o : chunkc tiling::window --grid-layout 1:2:1:0:1:1
# shift + alt - u   : chunkc tiling::window --grid-layout 2:2:0:0:1:1

# Focus window
shift + alt - h : chunkc tiling::window --focus west
shift + alt - j : chunkc tiling::window --focus south
shift + alt - k : chunkc tiling::window --focus north
shift + alt - l : chunkc tiling::window --focus east

# cmd - j : chunkc tiling::window --focus prev
# cmd - k : chunkc tiling::window --focus next

# fast focus desktop
cmd + alt - x : chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)

# swap window
ctrl + alt - h : chunkc tiling::window --swap west
ctrl + alt - j : chunkc tiling::window --swap south
ctrl + alt - k : chunkc tiling::window --swap north
ctrl + alt - l : chunkc tiling::window --swap east

# move window
shift + ctrl + alt - h : chunkc tiling::window --warp west
shift + ctrl + alt - j : chunkc tiling::window --warp south
shift + ctrl + alt - k : chunkc tiling::window --warp north
shift + ctrl + alt - l : chunkc tiling::window --warp east

# send window to desktop
ctrl + shift + alt - y : chunkc tiling::window --send-to-desktop prev
ctrl + shift + alt - l : chunkc tiling::window --send-to-desktop next

ctrl + shift + cmd - h : chunkc tiling::window --send-to-desktop prev; chunkc tiling::desktop --focus prev
ctrl + shift + cmd - l : chunkc tiling::window --send-to-desktop next; chunkc tiling::desktop --focus next

ctrl + shift + alt - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
ctrl + shift + alt - 1 : chunkc tiling::window --send-to-desktop 1
ctrl + shift + alt - 2 : chunkc tiling::window --send-to-desktop 2

# send window to desktop and follow focus
shift + cmd - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop); chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
shift + cmd - 1 : chunkc tiling::window --send-to-desktop 1; chunkc tiling::desktop --focus 1
shift + cmd - 2 : chunkc tiling::window --send-to-desktop 2; chunkc tiling::desktop --focus 2
shift + cmd - 3 : chunkc tiling::window --send-to-desktop 3; chunkc tiling::desktop --focus 3
shift + cmd - 4 : chunkc tiling::window --send-to-desktop 4; chunkc tiling::desktop --focus 4
shift + cmd - 5 : chunkc tiling::window --send-to-desktop 5; chunkc tiling::desktop --focus 5
shift + cmd - 6 : chunkc tiling::window --send-to-desktop 6; chunkc tiling::desktop --focus 6

# Resize

shift + alt - y : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge west; chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge east
shift + alt - u : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge south; chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge north
shift + alt - i : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge north; chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge south
shift + alt - o : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge east; chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge west

# equalize size of windows
shift + alt - 0 : chunkc tiling::desktop --equalize


# set insertion point for focused container
# ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
# ctrl + alt - h : chunkc tiling::window --use-insertion-point west
# ctrl + alt - j : chunkc tiling::window --use-insertion-point south
# ctrl + alt - k : chunkc tiling::window --use-insertion-point north
# ctrl + alt - l : chunkc tiling::window --use-insertion-point east

# toggle window fullscreen, native fullscreen, parent zoom
alt - f : chunkc tiling::desktop --toggle offset; chunkc tiling::window --toggle fullscreen
shift + alt - f : chunkc tiling::desktop --toggle offset; chunkc tiling::window --toggle native-fullscreen
alt - d : chunkc tiling::window --toggle parent

# toggle window: split type
alt - e : chunkc tiling::window --toggle split

# toggle window fade ??
alt - q : chunkc tiling::window --toggle fade

# toggle sticky ??
alt - s : chunkc tiling::window --toggle sticky

# toggle sticky, float and resize to picture-in-picture size
alt - p : chunkc tiling::window --toggle sticky;\
          chunkc tiling::window --grid-layout 5:5:4:0:1:1

# send window to monitor and follow focus
ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3

# MONITOR SETTINGS
ctrl + shift + cmd - j  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
ctrl + shift + cmd - k  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next

# focus monitor
cmd - k : chunkc tiling::monitor -f prev
cmd - j : chunkc tiling::monitor -f next


# DESKTOP Settings
# GAPS & PADDING
cmd + alt - k : chunkc tiling::desktop --gap inc
cmd + alt - j : chunkc tiling::desktop --gap dec

cmd + alt - h : chunkc tiling::desktop --padding inc
cmd + alt - l : chunkc tiling::desktop --padding dec

# toggle padding offset
alt - a : chunkc tiling::desktop --toggle offset

# create desktop, move window and follow focus
shift + cmd - n : chunkc tiling::desktop --create;\
                  id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
                  chunkc tiling::window --send-to-desktop $(echo ${id##* });\
                  chunkc tiling::desktop --focus $(echo ${id##* })

# create desktop and follow focus
cmd + alt - n : chunkc tiling::desktop --create;\
                id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
                chunkc tiling::desktop --focus $(echo ${id##* })


# rotate tree
shift + alt - r : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
alt - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
alt - x : chunkc tiling::desktop --mirror horizontal


# float next window to be tiled
shift + alt - t : chunkc set window_float_next 1

# change layout of desktop
ctrl + alt - a : chunkc tiling::desktop --layout bsp
ctrl + alt - s : chunkc tiling::desktop --layout monocle
ctrl + alt - d : chunkc tiling::desktop --layout float

ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1

# Border
# cmd - b_: chunkc border::clear



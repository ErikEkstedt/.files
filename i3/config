#vim:fdm=marker
# =============================================
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!
#
# =============================================

# MOD-keys
# BASH$ xmodmap
# mod1: Alt, mod2: num_lock , mod3: , mod4: R_win, L_win
set $mod Mod1
set $win Mod4

#========= VARIABLES ============={{{
# SET VARIABLES
set $term st
set $term2 termite
set $term3 konsole
set $term4 gnome-terminal

set $chrome google-chrome
set $Browser firefox
set $Music spotify
set $Editor vim

bindsym $mod+Shift+q kill
font pango:monospace 10

# Reload/Restart the configuration file
bindsym $mod+Ctrl+c reload 
bindsym $mod+Ctrl+r restart

# Lock computer/ Ctrl Alt Delete 
bindsym $win+l exec bash -c "gnome-screensaver-command -l"
bindsym $win+F1 exec bash -c "systemctl suspend"
bindsym $mod+Ctrl+Delete exec gnome-system-monitor
#}}}
#========= WORKSPACES ============{{{
set $ws1 "1:Web 1"
set $ws2 "2:Web 2"
set $ws3 "3:Code"
set $ws4 "4:Work"
set $ws5 "5:Notes"
set $ws6 "6:Logs"
set $ws7 "7:Config"
set $ws8 "8:Laptop"
set $ws9 "9:Netflix"
set $ws10 "10:Spotify"
set $ws11 "11:Master"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10; workspace $ws10
#}}}
#========= STARTUP == ============{{{
exec_always --no-startup-id ~/.files/Scripts/polybar_start.sh
exec_always --no-startup-id ~/.files/Scripts/mouse_settings.sh
exec_always --no-startup-id feh --bg-scale ~/.config/wall.png
exec --no-startup-id ~/.files/Scripts/start_up.sh
exec --no-startup-id gnome-sound-applet
exec --no-startup-id gnome-settings-daemon
exec --no-startup-id nm-applet
exec --no-startup-id udiskie
exec --no-startup-id compton -b

exec $term -t "rangerTerm" -e ~/.files/Scripts/tmux/ranger.sh
for_window [class="st-256color" title="rangerTerm"] mark "ranger" move scratchpad

#}}}
#========= MAPPINGS =============={{{
set $tmuxscripts ~/.files/Scripts/tmux
set $i3scripts ~/.files/i3/scripts

# Scratchpad
bindsym Mod1+Tab scratchpad show
bindsym Mod1+Shift+Tab move scratchpad

bindsym $mod+Return exec $term
bindsym $mod+a exec bash ~/.files/Scripts/Laptop/touchpad_onoff.sh
bindsym $mod+g [con_mark="browser"] scratchpad show
bindsym $mod+s [con_mark="music"] scratchpad show
bindsym $mod+r [con_mark="ranger"] scratchpad show
bindsym $mod+y [con_mark="youtube"] scratchpad show
bindsym $mod+n workspace $ws6 focus, exec $tmuxscripts/notes_tmux.sh
bindsym $mod+c workspace $ws7 focus, exec $tmuxscripts/config_tmux.sh
bindsym $mod+i exec $tmuxscripts/Vim.sh
bindsym $mod+p workspace $ws6 focus, exec $tmuxscripts/personal.sh
bindsym $mod+o workspace $ws3 focus, exec $tmuxscripts/work_tmux.sh
bindsym $mod+e workspace $ws1 focus, exec $tmuxscripts/SSH.sh
bindsym $mod+w exec rofi rofi -show window -lines 8 -padding 10
bindsym $mod+q exec rofi rofi -show ssh -terminal $term -lines 8 -padding 10


bindsym $mod+Shift+s workspace $ws9, exec $Music, mark "music
bindsym $mod+Shift+r exec $term -t "rangerTerm" -e ~/.files/Scripts/tmux/ranger.sh
bindsym $mod+Shift+Return exec $term -T "scratchTerm"
bindsym $mod+Shift+b floating enable, move position center


bindsym $mod+Ctrl+d exec rofi rofi -show run -lines 8 -padding 10
bindsym $mod+Ctrl+o workspace $ws3 focus, exec $i3scripts/workflow.sh
bindsym $mod+Ctrl+n exec nautilus --no-desktop
bindsym $mod+Ctrl+s exec shutter -s
bindsym $mod+Ctrl+g exec $Browser -new-window
bindsym $mod+Ctrl+y exec $chrome -new-window --app=https://www.youtube.com 
bindsym $mod+Ctrl+b floating enable, resize set 1440 1000, move position center

# Old/not working
# bindsym $mod+d workspace $ws6 focus, exec ~/.files/Scripts/new_log
# bindsym $mod+t exec ~/.files/Scripts/tlist.sh

# Monitor Setup
bindsym $win+m move workspace to output up
bindsym $win+F8 exec ~/.files/Scripts/monitor_toggle

#}}}
#========= FLOATING CLASSES ======{{{

floating_modifier $mod
focus_follows_mouse no

# Scratchpad floaters
for_window [class="st-256color" title="rangerTerm"] mark "ranger", scratchpad show
for_window [class="Google-chrome" instance="www.youtube.com"] mark "youtube", \
																															floating enable, \
																															move scratchpad, \
																															scratchpad show, \
																															resize set 1440 1000, \
																															move position center

# for_window [class="Spotify"] mark "music", move scratchpad, [con_mark="music"] scratchpad show
# for_window [class="Spotify"] mark "music", move $ws9, [con_mark="music"]

# Regular floaters
for_window [class="Simplescreenrecorder"] floating enable
for_window [class="Videos"] floating enable
for_window [class="Nautilus"] floating enable
for_window [class="Shutter"] floating enable
for_window [class="vlc"] floating enable
for_window [class="Totem"] floating enable
for_window [class="Eog"] floating enable
for_window [class="Video"] floating enable
for_window [class="Cheese"] floating enable
for_window [class=" "] floating enable
for_window [class="0"] floating enable
for_window [class="File-roller"] floating enable
for_window [class="feh"] floating enable
for_window [class="Gnome-system-monitor"] floating enable

#  programs
for_window [class="Simulate"] floating enable
for_window [class="Python"] floating enable
for_window [class="Roboschool Simulator"] floating enable
for_window [class="Bullet Physics"] floating enable
for_window [class="Frame"] floating enable, move 3000 px 1000 px
for_window [class="Matplotlib"] floating enable

# Floating constraints
floating_minimum_size 75 x 74
floating_maximum_size 3440 x 1440 


# Floating Toggle
set $FloatSize "Float size: 1-4, (f)loating enable "
mode $FloatSize{
	bindsym f floating enable
	bindsym 1 resize set 1440 1200,	floating enable,move position center, move left 1000 px
	bindsym 2 resize set 2440 1200,	floating enable, move position center
	bindsym 3 resize set 1440 1200,	floating enable, move position center, move right 1000 px

	bindsym b resize set 1440 900,	move position center

	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+Shift+w mode $FloatSize

#}}}
#========= APPEARENCE ============{{{
hide_edge_borders smart
for_window [class="^.*"] border pixel 0

# for_window [class="^.*"] border pixel 1
# for_window [class="Zathura"] border pixel 5
# for_window [class=" "] border pixel 5
# for_window [class="Google-chrome"] border pixel 5

set $color.gray = #A7A7A7  
set $color.white = #FFFFFF
set $color.black = #000000

# color of focused window
client.focused $color.gray $color.gray $color.gray
# client.focused #ff6417 #ff6417 #ff6417

# initial gap size
set $gi 5
set $go 0
set $ginc 1

gaps inner $gi
gaps outer $go

# Gap size
set $gap "Gap size: (O/o)uter, (I/i)nner, (r)eset, (n)one"
mode $gap{
	bindsym Shift+i gaps inner current plus $ginc
	bindsym i gaps inner current minus $ginc
	bindsym Shift+o	gaps outer current plus $ginc
	bindsym o gaps outer current minus $ginc

	bindsym r gaps inner current set $gi, gaps outer current set $go
	bindsym n gaps inner current set 0, gaps outer current set 0

	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+Shift+g mode $gap

#}}}
#========= MEDIA KEY BINDINGS ===={{{

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioStop exec playerctl stop
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# DESKTOP Settings
bindsym Shift+XF86AudioRaiseVolume exec pactl set-sink-volume 1 +5%
bindsym Shift+XF86AudioLowerVolume exec pactl set-sink-volume 1 -5%
bindsym Shift+XF86AudioMute exec pactl set-sink-mute 1 toggle

# LAPTOP Settings
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec pactl set-sink-mute 0 toggle


# Xrandr brightness
bindsym XF86MonBrightnessUp exec ~/.files/Scripts/Laptop/screen_bright -u
bindsym XF86MonBrightnessDown exec ~/.files/Scripts/Laptop/screen_bright -d

# Intel brightness
bindsym Shift+XF86MonBrightnessUp exec sudo ~/.files/Scripts/Laptop/intel_screen_bright_toggle

# key brightness
bindsym XF86KbdBrightnessUp exec sudo ~/.files/Scripts/Laptop/backlit_keys 
bindsym XF86KbdBrightnessDown exec sudo ~/.files/Scripts/Laptop/backlit_keys down

# Hibernate
bindsym XF86Sleep exec systemctl hybrid-sleep

#}}}
#========= MOVEMENTS ============={{{
bindsym $mod+Shift+h focus left
bindsym $mod+Shift+j focus down
bindsym $mod+Shift+k focus up
bindsym $mod+Shift+l focus right

set $growth 1
bindsym $mod+Shift+y resize shrink width $growth px or $growth ppt
bindsym $mod+Shift+i resize grow height $growth px or $growth ppt
bindsym $mod+Shift+u resize shrink height $growth px or $growth ppt
bindsym $mod+Shift+o resize grow width $growth px or $growth ppt

bindsym $mod+Ctrl+h move left
bindsym $mod+Ctrl+j move down
bindsym $mod+Ctrl+k move up
bindsym $mod+Ctrl+l move right

bindsym $mod+Shift+v split h
bindsym $mod+v split v

# enter fullscreen mode for the focused container
popup_during_fullscreen smart
bindsym $mod+f fullscreen toggle
bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle
bindsym $mod+Shift+z focus parent
bindsym $mod+z focus child

#}}}
#========= SHUTDOWN =============={{{
set $reboot_choice "Exit (L)ogout, (R)eboot, (P)oweroff"
mode $reboot_choice{
	bindsym $mod+r exec systemctl reboot
	bindsym $mod+l exit 
	bindsym $mod+p exec systemctl poweroff

	# back to normal: Enter or Escape
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+Ctrl+e mode $reboot_choice

#}}}
